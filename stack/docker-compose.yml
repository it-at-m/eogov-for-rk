name: eogov-routing-stack

services:
  #
  # ============= Kafka =============
  #
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - '22181:2181'
    networks:
      - internal
    healthcheck: &healthcheck
      test: nc -z localhost 2181 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10
    security_opt: &security_settings
      - no-new-privileges:true

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - '9092:9092'
      - '29092:29092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - internal
    healthcheck:
      <<: *healthcheck
      test: nc -z localhost 9092 || exit -1
    security_opt: *security_settings

  kafka-ui:
    image: provectuslabs/kafka-ui
    ports:
      - '8089:8080'
    depends_on:
      - kafka
      - zookeeper
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      DYNAMIC_CONFIG_ENABLED: 'true'
    networks:
      - internal
    healthcheck:
      <<: *healthcheck
      test: [ "CMD-SHELL", "wget --spider --timeout=1 http://localhost:8080/actuator/health" ]
    security_opt: *security_settings

  init-kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      kafka:
        condition: service_healthy
    entrypoint: [ '/bin/bash', '-c' ]
    networks:
      - internal
    command: |
      "
      # blocks until kafka is reachable
      echo -e 'Currently available topics:'
      kafka-topics --bootstrap-server kafka:9092 --list
      
      echo -e 'Creating kafka topics...'
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic eogov-test

      echo -e 'Resulting topics:'
      kafka-topics --bootstrap-server kafka:9092 --list
      "
    security_opt: *security_settings

  #
  # ============= S3 =============
  #
  minio:
    image: quay.io/minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: Test1234
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - ./minio:/data
    networks:
      - internal
    healthcheck:
      <<: *healthcheck
      test: [ "CMD-SHELL", "curl http://localhost:9000/minio/health/live" ]
    security_opt: *security_settings

  init-minio:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
        mc config host add minio http://minio:9000 minio Test1234;
        mc mb minio/eogov-bucket;
        exit 0;
      "
    networks:
      - internal
    security_opt: *security_settings

networks:
  internal:
